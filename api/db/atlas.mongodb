use("db_management_incidents");
db.createCollection("Roles",{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            additionalProperties: false,
            required: ["Name", "Permission"],
            properties:{
                _id:{
                    bsonType:"objectId"
                },
                Name:{
                    bsonType:"string",
                    maxLength: 40,
                    description: "The data must be string"
                },
                Permission:{
                    bsonType: "array",
                            items:{
                                bsonType:"string",
                                description: "He field 'permissions' of the object 'roles' is mandatory"
                            }
                }
            }
        }
    }
})

use("db_management_incidents");
db.createCollection("Users",{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            additionalProperties: false,
            required: ["Nit", "Full_Name", "Nickname", "Data_Birth", "Email", "Password", "Role"],
            properties:{
                _id:{
                    bsonType:"objectId"
                },
                Nit:{
                    bsonType:"int",
                    description: "The data 'NIT' must be int"
                },
                Full_Name:{
                    bsonType:"string",
                    maxLength: 60,
                    description: "The data 'Full_Name' must be string"
                },
                Nickname:{
                    bsonType:"string",
                    maxLength: 60,
                    description: "The data 'Nickname' must be string"
                },
                Data_Birth:{
                    bsonType:"string",
                    description: "The data 'Data_Birth' must be string"
                },
                Email:{
                    bsonType:"string",
                    description: "The data 'Email' must be string"
                },
                Password:{
                    bsonType:"string",
                    description: "The data 'Password' must be string"
                },
                Role:{
                    bsonType:"string",
                    description: "The data 'Role' must be string"
                }
            }
        }
    }
})

use("db_management_incidents");
db.createCollection("Zones",{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            additionalProperties: false,
            required: ["ID", "Area"],
            properties:{
                _id:{
                    bsonType:"objectId"
                },
                ID:{
                    bsonType:"int",
                    description: "The data 'ID' must be int"
                },
                Area:{
                    bsonType:"string",
                    enum:["Training", "Review", "Hunters", "Cafeteria", "Auditorium"],
                    description: "The data 'Area' must be string"
                },
                Classroom:{
                    bsonType:"string",
                    description: "The data 'Classroom' must be string"
                }
            }
        }
    }
})

use("db_management_incidents");
db.createCollection("Inventory",{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            additionalProperties: false,
            required: ["ID", "Zone_id"],
            properties:{
                _id:{
                    bsonType:"objectId"
                },
                ID:{
                    bsonType:"int",
                    description: "The data 'ID' must be int"
                },
                Zone_id:{
                    bsonType:"int",
                    description: "The data 'Zone_id' must be int"
                },
                Object:{
                    bsonType:"object",
                    additionalProperties:false,
                    required: ["ID", "Name_Object"],
                    properties:{
                        ID:{
                            bsonType:"int",
                        },
                        Name_Object:{
                            bsonType:"string",
                            description: "The data 'Name_Object' must be string"
                        }
                    }
                },
                Computer:{
                    bsonType:"object",
                    additionalProperties:false,
                    required: ["ID", "Mouse", "Keyboard", "Monitor"],
                    properties:{
                        ID:{
                            bsonType:"int",
                        },
                        Mouse:{
                            bsonType:"int",
                            description: "The data 'Mouse' must be int"
                        },
                        Keyboard:{
                            bsonType:"int",
                            description: "The data 'Keyboard' must be int"
                        },
                        Monitor:{
                            bsonType:"int",
                            description: "The data 'Monitor' must be int"
                        },
                        diadem:{
                            bsonType:"int",
                            description: "The data 'diadem' must be int"
                        }
                    }
                },
            }
        }
    }
})

use("db_management_incidents");
db.createCollection("Report_Incidents",{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            additionalProperties: false,
            required: ["ID", "Incident_Type", "Zone_id", "Description", "Status", "By_Camper"],
            properties:{
                _id:{
                    bsonType:"objectId"
                },
                ID:{
                    bsonType:"int",
                    description: "The data 'ID' must be int"
                },
                Incident_Type:{
                    bsonType:"string",
                    enum:["Material", "Digital"],
                    description: "The data 'Incident_Type' must be string"
                },
                Inventory_id:{
                    bsonType:"int",
                    description: "The data 'Inventory_id' must be int"
                },
                Description:{
                    bsonType:"string",
                    description: "The data 'Description' must be string"
                },
                Status:{
                    bsonType:"string",
                    enum:["Pending", "Assigned", "Solved"],
                    description: "The data 'Status' must be string"
                },
                By_Camper:{
                    bsonType:"object",
                    additionalProperties: false,
                    required:["Nit", "Full_Name"],
                    properties:{
                        Nit:{
                            bsonType:"int",
                            description: "The data 'Nit' must be int"
                        },
                        Full_Name:{
                            bsonType:"string",
                            description: "The data 'Full_Name' must be string"
                        }
                    }
                }
            }
        }
    }
})

use("db_management_incidents");
db.createCollection("Classify_Incidents",{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            additionalProperties: false,
            required: ["ID", "By_Trainer", "Incident_id", "Severity", "Support_Person"],
            properties:{
                _id:{
                    bsonType:"objectId"
                },
                ID:{
                    bsonType:"int",
                    description: "The data 'ID' must be int"
                },
                By_Trainer:{
                    bsonType:"object",
                    additionalProperties: false,
                    required:["Nit", "Full_Name"],
                    properties:{
                        Nit:{
                            bsonType:"int",
                            description: "The data 'Nit' must be int"
                        },
                        Full_Name:{
                            bsonType:"string",
                            description: "The data 'Full_Name' must be string"
                        }
                    }
                },
                Incident_id:{
                    bsonType:"int",
                    description: "The data 'Incident_id' must be int"
                },
                Severity:{
                    bsonType:"string",
                    enum:["Minor", "Moderate", "Severe"],
                    description: "The data 'Severity' must be string"
                },
                Support_Person:{
                    bsonType:"object",
                    additionalProperties: false,
                    required:["Nit", "Full_Name"],
                    properties:{
                        Nit:{
                            bsonType:"int",
                            description: "The data 'Nit' must be int"
                        },
                        Full_Name:{
                            bsonType:"string",
                            description: "The data 'Full_Name' must be string"
                        }
                    }
                }
            }
        }
    }
})